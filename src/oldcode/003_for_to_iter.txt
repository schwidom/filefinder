     /*
     for exp in args.expression.clone() {
      let stmt = sexp::parse( exp.as_str()).unwrap();
      let res = interpreter.interpret_stmt( State{ path: Some( path.clone() ), stmt: stmt});
      if res { println!("{}", path.display()); }
     }
     */

     if args.expression.clone().iter() // 3y18vmwgej 
      .map( | exp | sexp::parse( exp.as_str()).unwrap())
      .map( | stmt | interpreter.interpret_term( State{ path: Some( &path ), stmt: stmt}))
      .fold( true, | accu, res | accu && res) {
      println!("{}", path.display());
     }
